<%= form_for(@post) do |f| %>
  <div class="field">
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </div>
  <div class="field">
    <%= f.label :description %><br>
    <%= f.text_field :description %>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<!-- To keep it simple, we just have one <DIV> that has placeholders for the data, and we fill it in when we get that response.  -->
<div id="postResult">
  <h2 id="postTitle"></h2>
  <p id="postBody"></p>
</div>

<script type="text/javascript" charset="utf-8">
  //add an event listener
  $(function () {
    $('form').submit(function(event) {
      //prevent form from submitting the default way
      event.preventDefault();
      //JSON serialization 
      var values = $(this).serialize();
      //pass in the values
      var posting = $.post('/posts', values);
      //post when ajax is 'done'
      posting.done(function(data) {
        var post = data;
        $("#postTitle").text(post["title"]);
        $("#postBody").text(post["description"]);
      });
    });
  });
</script>

<!-- Advanced: The jQuery post() method returns a jqXHR object, which we're storing in our posting variable. These jqXHR objects implement the Promise interface, which is used for deferred or asynchronous operations.  -->