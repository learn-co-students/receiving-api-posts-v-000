<%= form_for(@post) do |f| %>

  <div class="field">
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </div>
  <div class="field">
    <%= f.label :description %><br>
    <%= f.text_field :description %>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>

<% end %>


<div id="postResult">
  <h2 id="postTitle"></h2>
  <p id="postBody"></p>
</div>


<script type="text/javascript" charset="utf-8">
// use jQuery and AJAX to submit it
// handle a JSON response
//display the newly created blog post without redirecting to post show page.

//add an event listener for $('form').submit() to our document ready()
  $(function () {
    $('form').submit(function(event) {
      //prevent form from submitting the default way
      event.preventDefault();
      //testing
      // alert("we r hack3rz");

      // jQuery serialize() takes form data and serializes it
      var values = $(this).serialize();
      //jQuery post() to retrieve data, passes it the URL and values, returns a jqXHR object stored in posting variable
      //implement Promise interface, used for deferred or asynchronous operations
      var posting = $.post('/posts', values);
      //use posting object to specify what should happen when the AJAX request is done (handle response)
      posting.done(function(data) {
        var post = data;
        $("#postTitle").text(post["title"]);
        $("#postBody").text(post["description"]);
      });
    });
  });
</script>
